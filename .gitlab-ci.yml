image: microsoft/dotnet:latest

stages:
  - build
  - test
  - deploy

variables:
  API_PATH: "BibleBlast.API"
  TEST_PATH: "BibleBlast.API.UnitTests"
  IMAGE_NAME: bible-blast
  TAG: 0.1.$CI_CONCURRENT_ID

build:
  stage: build
  script:
    - "apt-get update"
    - "apt-get -y install zip"
    - "cd $API_PATH"
    - "dotnet restore"
    - "dotnet build"

test:
  stage: test
  script:
    - "apt-get update"
    - "apt-get -y install zip"
    - "cd $TEST_PATH"
    - "dotnet restore"
    - "dotnet test"

deploy:
  image: docker:dind
  stage: deploy
  script:
    ## Install ssh-agent if not already installed, it is required by Docker.
    - 'which ssh-agent || ( apk update -y && apk add openssh-client -y )'

    ## Run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)

    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

    ## Create the SSH directory and give it the right permissions
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    - "docker build -t jittles/$IMAGE_NAME:$TAG ."
    - "echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin"
    - "docker push jittles/$IMAGE_NAME:$TAG"

    - "ssh -o StrictHostKeyChecking=no root@$DIGITALOCEAN_DROPLET_ADDRESS '/bin/bash ./deploy_app.sh jittles/$IMAGE_NAME:$TAG'"
